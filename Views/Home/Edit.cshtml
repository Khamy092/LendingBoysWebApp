@using WebMatrix.Data
@{
    // get the client ID from the url
    var ClientID = Request.QueryString["id"] ?? "1";

    // opening a database connection
    var db = Database.Open("ClientData");

    // get the client data from the database
    var clientSql = "SELECT * FROM Clients LEFT JOIN LoanPurposes ON LoanPurposes.purposeID = Clients.purposeID WHERE ClientID = @0";
    var clientData = db.QuerySingle(clientSql, ClientID);


    // getting the LoanPurposes from the database
    var LoanPurposes = db.Query("SELECT * FROM LoanPurposes");

    // update the client with new data.
    var UpdateClientData = "UPDATE Clients SET firstName = @0, lastName = @1, email = @2, phoneNumber = @3, DOB = @4, gender = @5," +
                " documentCheckList = @6, brokerNotes = @7, purposeID = @8, loanType = @9, LoanStatus = @10" +
                " WHERE clientID = @11";

    if (IsPost)
    {
        // getting the data from the form

        var firstName = Request.Form["FirstName"];                          // getting the FirstName from the form
        var lastName = Request.Form["LastName"];                                // getting the LastName from the form
        var DOB = Request.Form["BirthDate"];                                        // getting the date of birth
        var gender = Request.Form["inlineRadioOptions"];                                    // getting the gender
        var emailAdd = Request.Form["emailAddress"];                                               // getting the email address
        var ClientphoneNumber = Request.Form["phoneNumber"];                                        // getting the phone number
        var brokerNotes = Request.Form["BrokerNotes"];                                                  // getting the broker notes from the textarea
        var LoanPurpose = Request.Form["LoanPurpose"];                                                       // getting the loan purpose
        var LoanType = Request.Form["LoanType"];                                                                // getting the loan type
        var LoanStatus = Request.Form["LoanStatus"];                                                                // getting the loan status


        // getting the list of documents and adding them to this string.
        var documentCheckList = "";


        if (Request.Form["DL"] == "on") // if the checkbox in the form is checked then add a text to the documentChecklist variable
        {
            documentCheckList += "Driver's Licence, ";
        }
        if (Request.Form["Pass&Citi"] == "on")
        {
            documentCheckList += " Passport,";
        }
        if (Request.Form["ITR"] == "on")
        {
            documentCheckList += " Income Tax Return,";
        }
        if (Request.Form["CTR"] == "on")
        {
            documentCheckList += " Company Tax Return,";
        }

        if (Request.Form["PaySlips"] == "on")
        {
            documentCheckList += " Paylsips,";
        }

        if (Request.Form["BankStatements"] == "on")
        {
            documentCheckList += " Bank Statements,";
        }
        if (Request.Form["HomeLoanStatements"] == "on")
        {
            documentCheckList += " Home Loan Statements";
        }

        // if the (comma) is the last item in the list, remove the comma.

        if (documentCheckList.EndsWith(","))
        {
            documentCheckList = documentCheckList.Remove(documentCheckList.Length - 1);
        }

        // send an email to the client

        //// adding the data to the database

        try
        {


            db.Execute(UpdateClientData, firstName, lastName, emailAdd, ClientphoneNumber, DOB, gender, documentCheckList, brokerNotes, LoanPurpose, LoanType, LoanStatus, ClientID); // updating the status

            // if the data added successfully then showing a confirmation message.

            <div class="alert alert-success alert-dismissible fade show" role="alert">
                Client updated sucessfully.
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        catch
        {

            // Showing an error message instead of crashing the whole thing.



            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                There was a problem with updating client data. Please try again.
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
    }

    //// send an email to the client
    //var email = new System.Net.Mail.MailMessage();
    //email.To.Add(new System.Net.Mail.MailAddress("khaliqdadtaqi@gmail.com"));
    //email.From = new System.Net.Mail.MailAddress("simsingh526@gmail.com");
    //email.Subject = "Client updated";
    //email.Body = "Your client data has been updated. Please check your dashboard for more details.";
    //email.IsBodyHtml = true;
    //email.Priority = System.Net.Mail.MailPriority.High;

    //var smtp = new System.Net.Mail.SmtpClient();
    //smtp.Host = "smtp.gmail.com";
    //smtp.Port = 587;
    //smtp.EnableSsl = true;
    //smtp.UseDefaultCredentials = false;
    //smtp.DeliveryMethod = System.Net.Mail.SmtpDeliveryMethod.Network;

    //new System.Net.NetworkCredential("simsingh526@gmail.com", "simeknoor2022");
    //smtp.Timeout = 20000;
    //smtp.Send(email);


}


<h2 class="text-center">Edit Client</h2>

<div class="container py-5 h-100">
    <div class="row justify-content-center align-items-center h-100">
        <div class="col-12 col-lg-9 col-xl-7">
            <div class="card shadow-sm card-registration bg-light" style="border-radius: 20px;">
                <div class="card-body p-4 p-md-5">
                    <form method="post" action="~/Home/Edit?id=@clientData.clientID">

                        <div class="row">
                            <div class="col-md-6 mb-4">

                                <div class="form-outline">
                                    <label class="form-label" for="firstName">First Name</label>
                                    <input type="text" name="FirstName" value="@clientData.firstName" placeholder="" class="form-control form-control-lg" />

                                </div>

                            </div>
                            <div class="col-md-6 mb-4">

                                <div class="form-outline">
                                    <label class="form-label" for="lastName">Last Name</label>
                                    <input type="text" name="LastName" value="@clientData.lastName" class="form-control form-control-lg" />
                                </div>

                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-4 d-flex align-items-center">

                                <div class="form-outline datepicker w-100">

                                    @{
                                        // convert a full date to a short date
                                        var shortDate = clientData.DOB.ToShortDateString();
                                        <label for="birthdayDate" class="form-label">Birthday | <span class="fw-bold">Current: </span> @shortDate</label>
                                        <input type="date" class="form-control form-control-lg" id="birthdayDate" name="BirthDate" value="@Request.Form["BirthDate"]" />
                                    }
                                </div>

                            </div>
                            <div class="col-md-6 mb-4">
                                <br />
                                <h6 class="mb-2 pb-1">Gender: </h6>
                                @{
                                    if (clientData.gender == "Male")
                                    {
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="maleGender"
                                                   value="Male" checked />
                                            <label class="form-check-label" for="maleGender">Male</label>
                                        </div>

                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="femaleGender"
                                                   value="Female" />
                                            <label class="form-check-label" for="femaleGender">Female</label>
                                        </div>

                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="otherGender"
                                                   value="Other" />
                                            <label class="form-check-label" for="otherGender">Other</label>
                                        </div>
                                    }

                                    else if (clientData.gender == "Female")
                                    {
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="maleGender"
                                                   value="Male" />
                                            <label class="form-check-label" for="maleGender">Male</label>
                                        </div>

                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="femaleGender"
                                                   value="Female" checked />
                                            <label class="form-check-label" for="femaleGender">Female</label>
                                        </div>

                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="otherGender"
                                                   value="Other" />
                                            <label class="form-check-label" for="otherGender">Other</label>
                                        </div>
                                    }

                                    else
                                    {
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="maleGender"
                                                   value="Male" />
                                            <label class="form-check-label" for="maleGender">Male</label>
                                        </div>

                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="femaleGender"
                                                   value="Female" />
                                            <label class="form-check-label" for="femaleGender">Female</label>
                                        </div>

                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="otherGender"
                                                   value="Other" checked />
                                            <label class="form-check-label" for="otherGender">Other</label>
                                        </div>
                                    }
                                }






                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-4 pb-2">

                                <div class="form-outline">
                                    <label class="form-label" for="emailAddress">Email</label>
                                    <input type="email" name="emailAddress" id="emailAddress" placeholder="name@example.com" class="form-control form-control-lg" value="@clientData.email" />

                                </div>

                            </div>
                            <div class="col-md-6 mb-4 pb-2">

                                <div class="form-outline">
                                    <label class="form-label" for="phoneNumber">Phone Number</label>
                                    <input type="tel" id="phoneNumber" name="phoneNumber" value="@clientData.phoneNumber" class="form-control form-control-lg" placeholder="04..." />
                                    @{
                                        var phoneNumber = Request.Form["phoneNumber"];

                                        // if phone number is not digits then display error message
                                        if (!string.IsNullOrEmpty(phoneNumber) && !phoneNumber.All(char.IsDigit))
                                        {
                                            <span class="text-danger">Phone number must be digits only</span>
                                        }
                                    }
                                </div>

                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-4 pb-2">

                                <label class="form-label select-label">Loan Purpose: Current</label><br />
                                <select class="select form-control-lg col-12" name="LoanPurpose">
                                    <option value="@clientData.purposeID">@clientData.purpose</option>
                                    <option value="0" disabled>Choose new</option>
                                    @{

                                        // looping through the LoanPurposes and displaying them in the select
                                        foreach (var loanPurpose in LoanPurposes)
                                        {
                                            <option value="@loanPurpose.purposeID">@loanPurpose.purpose</option>
                                        }
                                    }
                                </select>

                            </div>
                            <div class="col-md-6 mb-4 pb-2">

                                <label class="form-label select-label">Loan Type</label><br />
                                <select class="select form-control-lg col-12" name="LoanType" value="@Request.Form["LoanType"]">
                                    <option value="Formal Approval">@clientData.LoanType</option>
                                    <option value="1" disabled>Choose new</option>
                                    <option value="Formal Approval">Formal Approval</option>
                                    <option value="Pre-Approval">Pre-Approval</option>
                                </select>

                            </div>
                        </div>
                        <hr />

                        <div class="row" style="min-width:100%;">


                            <div class="col-md-12 mb-4">
                                <br />
                                <h4 class="mb-2 pb-1">Documents Checklist</h4>
                                <h6 class="text-danger mb-2">Please select all the applicable documents.</h6>

                                <div class="form-check">
                                    <!-- avoiding the null error if the document check list is entirely empty -->
                                    <input class="form-check-input" type="checkbox" id="flexCheckDefault" name="DL" @{ if (clientData.documentCheckList != null && clientData.documentCheckList.Contains("Driver's Licence,")) { <text> checked</text> } } />
                                    <label class="form-check-label" for="flexCheckDefault">Driver's Licence</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="flexCheckChecked" name="Pass&Citi" @{ if (clientData.documentCheckList != null && clientData.documentCheckList.Contains("Passport,")) { <text> checked</text> } } />
                                    <label class="form-check-label" for="flexCheckChecked">Passport / Citizenship</label>
                                </div>

                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="PalySlips" id="flexCheckChecked" @{ if (clientData.documentCheckList != null && clientData.documentCheckList.Contains("Payslips,")) { <text> checked</text> }  } />
                                    <label class="form-check-label" for="flexCheckChecked">Payslips</label>
                                </div>

                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="ITR" id="flexCheckChecked" @{ if (clientData.documentCheckList != null && clientData.documentCheckList.Contains("Income Tax Return,")) { <text> checked</text> } } />
                                    <label class="form-check-label" for="flexCheckChecked">Income Tax Returns</label>
                                </div>

                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="CTR" id="flexCheckChecked" @{ if (clientData.documentCheckList != null && clientData.documentCheckList.Contains("Company Tax Return,")) { <text> checked</text> } } />
                                    <label class="form-check-label" for="flexCheckChecked">Company Financials</label>
                                </div>

                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="BankStatements" id="flexCheckChecked" @{ if (clientData.documentCheckList != null && clientData.documentCheckList.Contains("Bank Statements,")) { <text> checked</text> } } />
                                    <label class="form-check-label" for="flexCheckChecked">Bank Statements</label>
                                </div>

                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="HomeLoanStatements" id="flexCheckChecked" @{ if (clientData.documentCheckList != null && clientData.documentCheckList.Contains("Home Loan Statements,")) { <text> checked</text> } } />
                                    <label class="form-check-label" for="flexCheckChecked">Home Loan Statements</label>
                                </div>
                            </div>
                        </div>

                        <hr />
                        <div class="row">
                            <div class="form-group">
                                <h4 class="mb-2 pb-1">Broker Notes:</h4>
                                <textarea class="form-control" style="min-width:100%;" id="brokerNotes" name="BrokerNotes" rows="3">@clientData.brokerNotes</textarea>
                            </div>
                        </div>
                        <hr />
                        <div class="row">
                            <div class="form-group">
                                <h4 class="mb-2 pb-1">Client Status:</h4>
                                <select class="select form-control-lg col-12" name="LoanStatus" value="@Request.Form["LoanStatus"]">
                                    <option value="@clientData.LoanStatus">@clientData.LoanStatus</option>
                                    <option value="1" disabled>Choose new</option>
                                    <option class="bg-primary text-light" value="Listed">Listed</option>
                                    <option class="bg-warning text-light" value="In Process">In Process</option>
                                    <option class="bg-success text-light" value="Settled">Settled</option>
                                    <option class="bg-danger text-light" value="Not Proceeding">Not Proceeding</option>
                                </select>
                            </div>
                        </div>

                        <div class="mt-4 pt-2">
                            <input class="btn btn-danger btn-lg" type="submit" value="Submit" />
                            <input class="btn btn-warning btn-lg" type="reset" value="Clear" />
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>